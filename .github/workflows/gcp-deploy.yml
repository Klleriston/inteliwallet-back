name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: inteliwallet-api
  CLOUD_FUNCTION_NAME: send-email

jobs:
  deploy-backend:
    name: Deploy Backend to Cloud Run
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build --platform linux/amd64 -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                   gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --timeout 300 \
          --max-instances 10 \
          --min-instances 0 \
          --port 8080 \
          --set-env-vars="SPRING_PROFILES_ACTIVE=prod" \
          --set-secrets="DATABASE_URL=DATABASE_URL:latest,\
          DATABASE_USERNAME=DATABASE_USERNAME:latest,\
          DATABASE_PASSWORD=DATABASE_PASSWORD:latest,\
          JWT_SECRET=JWT_SECRET:latest"

    - name: Get Cloud Run URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)')
        echo "Service URL: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: Test deployment
      run: |
        curl -f ${{ env.SERVICE_URL }}/api/actuator/health || exit 1
        echo "Deployment successful!"
